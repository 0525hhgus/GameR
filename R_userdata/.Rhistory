q()
x1<-c(1,3,5,7,9)
class(x1)
is.numeric(x1)
is.integer(x1)
x2<-as.integer(x1)
length(x1)
is.vector(x1)
"I like apple"
class("I like apple")
help(vector)
help(integer)
clear
x2<-c(1,4,9)
sqrt(x2)
min(x2)
max(x2)
mean(x2)
y2=2+x2
plot(x2, y2)
log10(10)
log(10)
exp(10)
sin(pi/2)
ls()
rm(x1)
c1 <- "MiXeD cAsE 123"
tolower(c1)
toupper(c1)
x3<-rnorm(100)
head(x3)
mean(x3)
sd(x3)
min(x3)
max(x3)
hist(x3)
x4<-rnorm(10000)
mean(x4)
sd(x4)
hist(x4)
x5<-rnorm(100000)
hist(x5)
mean(x5)
install.packages("ggplot2")
library(ggplot2)
install.packages("scatterplot3d")
library(scatterplot3d)
install.packages("scatterplot3d")
library(ggplot2)
library(scatterplot3d)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
help(ggplot2)
help(scatterplot3d)
z <- seq(-10, 10, 0.01)
x <- cos(z)
y <- sin(z)
scatterplot3d(x, y, z, highlight.3d=TRUE, col.axis="blue",
col.grid="lightblue", main="scatterplot3d - 1", pch=20)
z <- seq(-10, 10, 0.01)
x <- cos(z)
y <- sin(z)
scatterplot3d(x, y, z, highlight.3d=TRUE, col.axis="blue",
col.grid="lightblue", main="scatterplot3d - 1", pch=20)
temp <- seq(-pi, 0, length = 50)
x <- c(rep(1, 50) %*% t(cos(temp)))
y <- c(cos(temp) %*% t(sin(temp)))
z <- c(sin(temp) %*% t(sin(temp)))
scatterplot3d(x, y, z, highlight.3d=TRUE,
col.axis="blue", col.grid="lightblue",
main="scatterplot3d - 2", pch=20)
install.packages('e1071')
library(e1071)
help("svm")
data(iris)
attach(iris)
## classification mode
# default with factor response:
model <- svm(Species ~ ., data = iris)
# alternatively the traditional interface:
x <- subset(iris, select = -Species)
y <- Species
model <- svm(x, y)
print(model)
summary(model)
# test with train data
pred <- predict(model, x)
# (same as:)
pred <- fitted(model)
# Check accuracy:
table(pred, y)
# compute decision values and probabilities:
pred <- predict(model, x, decision.values = TRUE)
attr(pred, "decision.values")[1:4,]
# visualize (classes by color, SV by crosses):
plot(cmdscale(dist(iris[,-5])),
col = as.integer(iris[,5]),
pch = c("o","+")[1:150 %in% model$index + 1])
help("mean")
source('D:/R files/lec2_1.R', echo=TRUE)
x<-c(1,3,5,7,9)
x[3]
x[-1]
x1<-x[-c(1,2)]
x1
x2<-x[-c(1:3)]
x2
y1<-seq(0,10, length=20)
y1
y2<-seq(0,10, by=0.5)
y2
z1<-rep(1:4, 2)
z1
z2<-rep(1:2,5)
z2
c1<-c(2,4,6,8,10)
c2<-cbind(x, c1)
c2
c3<-rbind(x,c1)
c3
m1<-matrix(1:10, nrow=2)
m1
m2<-matrix(1:6, ncol=3)
m2
m3<-matrix(1:6, nrow=2, byrow=T)
m3
a1<-array(c(1:18), dim=c(3,3,2))
a1
a1[, ,1]
a1[, ,2]
q1<-seq(0,10, by=0.4)
mean(q1)
q2<-q1[-c(1:5)]
mean(q2)
gender<-c(0,1)
names(gender)<-c("female", "male")
gender
length(gender)
size<-c("S", "M","L","XL")
size_factor<-factor(size)
size_factor
is.factor(size_factor)
size_factor2 <- factor(size,
levels = c("S", "M","L","XL"))
size_factor2
x<-matrix(rnorm(12),nrow=4)
View(x)
x
dim(x)
dimnames(x)[[2]]<-paste("x",1:3,sep="")
x
y<-matrix(rnorm(12),nrow=4)
colnames(y) <- c("y1", "y2", "y3")
y
dimnames(x)[[1]]<-paste("id",1:4,sep="")
x
is.data.frame(x)
x<-as.data.frame(x)
is.data.frame(x)
x$x1
mean(x$x1)
sd(x$x1)
summary(x)
View(x)
View(x)
View(iris)
setwd("D:/Project/R_userdata")
udata1 <- read.csv("userdata.csv")
udata1 <- read.csv("userdata1.csv")
View(udata1)
View(udata1)
View(udata1)
library(arules)
summary(udata1)
udata.list<-split(udata1$Game,udata1$ID)
View(udata1)
head(udata1)
